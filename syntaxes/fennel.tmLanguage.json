{
    "name": "Fennel",
    "fileTypes": [
        "fnl"
    ],
    "patterns": [
        {
            "begin" : "\"",
            "end" : "\"",
            "name" : "string.quoted.double.fennel"
        },
        {
            "match": ";.*$",
            "name": "comment.line.double-dash.fennel"
        },
        {
            "match": "\\b(true|false|nil)\\b",
            "name": "constant.language.fennel"
        },
        {
            "match": "\\B(:\\S+)\\b",
            "name": "entity.name.tag.fennel"
        },
        {
            "match": "(local|global|var|tset|set-forcibly!|set)[[:space:]]+([^[:space:]]+)",
            "captures": {
                "1": { "name": "keyword.control.fennel" },
                "2": { "name": "variable.other.fennel" }
            }
        },
        {
            "match": "(fn|defun)[[:space:]]+([^[:space:]]+)?[[:space:]]*\\[",
            "captures": {
                "1": { "name": "keyword.control.fennel" },
                "2": { "name": "entity.name.function.fennel" }
            }
        },
        {
            "match": "[[:space:]\\(\\)](comment|hashfn|let|each|for|while|do|match|if|when|lambda|Î»|or|and|not|require-macros|require|include|list|sym|list\\?|sym\\?|table\\?|sequence\\?|gensym|varg\\?|multi-sym\\?|get-scope|in-scope\\?|eval-compiler|macros|macro|doto|values|partial|length|lua)[[:space:]\\(\\)]",
            "captures": {
                "1": { "name": "keyword.control.fennel" }
            }
        },
        {
            "match": "[[:space:]\\(\\)](assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|loadstring|loadfile|load|module|next|pairs|pcall|print|rawequal|rawget|rawset|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall|coroutine\\.create|coroutine\\.resume|coroutine\\.running|coroutine\\.status|coroutine\\.wrap|coroutine\\.yield|debug\\.debug|debug\\.getfenv|debug\\.gethook|debug\\.getinfo|debug\\.getlocal|debug\\.getmetatable|debug\\.getregistry|debug\\.getupvalue|debug\\.setfenv|debug\\.sethook|debug\\.setlocal|debug\\.setmetatable|debug\\.setupvalue|debug\\.traceback|io\\.close|io\\.flush|io\\.input|io\\.lines|io\\.open|io\\.output|io\\.popen|io\\.read|io\\.stderr|io\\.stdin|io\\.tmpfile|io\\.type|io\\.write|match\\.abs|match\\.acos|match\\.asin|match\\.atan|match\\.atan2|match\\.ceil|match\\.cosh|match\\.cos|match\\.deg|match\\.exp|match\\.floor|match\\.fmod|match\\.frexp|match\\.huge|match\\.ldexp|match\\.log|match\\.log10|match\\.max|match\\.min|match\\.modf|match\\.pi|match\\.pow|match\\.rad|match\\.randomseed|match\\.random|match\\.sinh|match\\.sin|match\\.sqrt|match\\.tanh|match\\.tan|os\\.clock|os\\.date|os\\.difftime|os\\.execute|os\\.exit|os\\.getenv|os\\.remove|os\\.rename|os\\.setlocale|os\\.time|os\\.tmpname|package\\.cpath|package\\.loaded|package\\.loaders|package\\.loadlib|package\\.path|package\\.preload|package\\.seeall|string\\.byte|string\\.char|string\\.dump|string\\.find|string\\.format|string\\.gmatch|string\\.gsub|string\\.len|string\\.lower|string\\.match|string\\.rep|string\\.reverse|string\\.sub|string\\.upper|table\\.concat|table\\.insert|table\\.move|table\\.maxn|table\\.pack|table\\.remove|table\\.sort|table\\.unpack|utf8\\.charpattern|utf8\\.char|utf8\\.codepoint|utf8\\.codes|utf8\\.len|utf8\\.offset)[[:space:]\\(\\)]",
            "captures": {
                "1": { "name": "support.function.fennel" }
            }
        },
        {
            "match": ":(close|flush|lines|read|seek|setvbuf|write)",
            "name": "support.function.fennel"
        },
        {
            "match": "(\\,|->>|->|-\\?>>|-\\?>|`|#)",
            "name": "keyword.other.fennel"
        }
    ],
    "scopeName": "source.fennel"
}